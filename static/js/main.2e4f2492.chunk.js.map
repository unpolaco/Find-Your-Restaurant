{"version":3,"sources":["img/map-pointer.svg","components/SelectCategories.js","components/CategoryList.js","components/Input.js","components/Label.js","components/Button.js","components/Form.js","components/RestaurantCard.js","components/Title.js","components/Map.js","styles/GlobalStyle.js","styles/mainTheme.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Select","styled","select","theme","ghostWhite","amber500","fontL","Option","option","amber800","SelectCategories","props","onChange","onChangeCategory","disabled","value","categories","map","category","key","id","name","categoryList","sort","a","b","localeCompare","Input","input","backgroundColor","fontS","AnimatedLabel","label","SubmitButton","button","FormWrapper","form","Form","onSubmit","submit","required","type","htmlFor","Wrapper","div","unhiddenAnimation","keyframes","CardWrapper","index","RestaurantCardText","p","RestaurantCard","restaurantData","el","onClick","onSelectRestaurant","className","uuid","v4","toUpperCase","address","street","Title","fontXl","Map","this","L","center","cityCenterPosition","zoom","zoomControl","tileLayer","detectRetina","maxZoom","maxNativeZoom","addTo","layer","layerGroup","DefaultIcon","icon","iconUrl","iconSize","Marker","prototype","options","selectedRestaurant","updateMarkers","flyTo","clearLayers","forEach","marker","latLng","title","bindPopup","MapWrapper","onSelectMarker","React","Component","GlobalStyle","createGlobalStyle","gray80","blueGrey200","blueGrey800","blueGrey900","amber600","fontM","App","state","inputValue","restaurants","selectedCategoryId","findCategoryId","e","filter","target","handleSubmit","preventDefault","inputCityName","categoryId","loadData","handleSelectRestaurant","console","log","currentTarget","getAttribute","city","fourSquareUrl","parameters","client_id","client_secret","near","limit","v","fetch","URLSearchParams","then","res","json","response","venues","setState","prevState","geocode","feature","geometry","lat","lng","location","formattedAddress","alert","MainWrapper","Menu","handleSelectMarker","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2e4f2492.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/map-pointer.339bba5d.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst SelectCategories = (props) => {\r\n  return (\r\n    <Select  onChange={props.onChangeCategory}>\r\n        <Option disabled value={\"Choose your favourite cousine\"} > Choose your favourite cousine </Option>\r\n        {props.categories.map(category => <Option key={category.id}>{category.name}</Option>)}\r\n    </Select>\r\n  )\r\n}\r\nconst Select = styled.select`\r\n  color: ${({ theme }) => theme.ghostWhite};\r\n  cursor: pointer;\r\n  background-color: ${({ theme }) => theme.amber500};\r\n  padding: 3px 20px 3px 20px;\r\n  width: 300px;\r\n  height: 40px;\r\n  font-size: ${({ theme }) => theme.fontL};\r\n  border-radius: 20px; \r\n  border: none;\r\n  outline-color: #fff; \r\n  border: 1px solid ${({ theme }) => theme.amber500};\r\n`\r\nconst Option = styled.option`\r\n  color: ${({ theme }) => theme.amber800};\r\n  background-color: ${({ theme }) => theme.ghostWhite};\r\n`\r\n\r\nexport default SelectCategories;\r\n\r\n\r\n","const categoryList = [\r\n  {name: \"Vegetarian / Vegan Restaurant\", id: \"4bf58dd8d48988d1d3941735\"},\r\n  {name: \"Gluten-free Restaurant\", id: \"4c2cd86ed066bed06c3c5209\"},\r\n  {name: \"Chinese Restaurant\", id: \"4bf58dd8d48988d145941735\"},\r\n  {name: \"Indonesian Restaurant\", id: \"4deefc054765f83613cdba6f\"},\r\n  {name: \"Ethiopian Restaurant\", id: \"4bf58dd8d48988d10a941735\"},\r\n  {name: \"Japanese Restaurant\", id: \"4bf58dd8d48988d111941735\"},\r\n  {name: \"Korean Restaurant\", id: \"4bf58dd8d48988d113941735\"},\r\n  {name: \"Thai Restaurant\", id: \"4bf58dd8d48988d149941735\"},\r\n  {name: \"Cuban Restaurant\", id: \"4bf58dd8d48988d154941735\"},\r\n  {name: \"Vietnamese Restaurant\", id: \"4bf58dd8d48988d14a941735\"},\r\n  {name: \"Caucasian Restaurant\", id: \"5293a7d53cf9994f4e043a45\"},\r\n  {name: \"Bulgarian Restaurant\", id: \"56aa371be4b08b9a8d5734f3\"},\r\n  {name: \"Ukrainian Restaurant\", id: \"52e928d0bcbc57f1066b7e96\"},\r\n  {name: \"Czech Restaurant\", id: \"52f2ae52bcbc57f1066b8b81\"},\r\n  {name: \"French Restaurant\", id: \"4bf58dd8d48988d10c941735\"},\r\n  {name: \"German Restaurant\", id: \"4bf58dd8d48988d10d941735\"},\r\n  {name: \"Greek Restaurant\", id: \"4bf58dd8d48988d10e941735\"},\r\n  {name: \"Hungarian Restaurant\", id: \"52e81612bcbc57f1066b79fa\"},\r\n  {name: \"Indian Restaurant\", id: \"4bf58dd8d48988d10f941735\"},\r\n  {name: \"Italian Restaurant\", id: \"4bf58dd8d48988d110941735\"},\r\n  {name: \"Argentinian Restaurant\", id: \"4bf58dd8d48988d107941735\"},\r\n  {name: \"Brazilian Restaurant\", id: \"4bf58dd8d48988d16b941735\"},\r\n  {name: \"Mediterranean Restaurant\", id: \"4bf58dd8d48988d1c0941735\"},\r\n  {name: \"Mexican Restaurant\", id: \"4bf58dd8d48988d1c1941735\"},\r\n  {name: \"Lebanese Restaurant\", id: \"58daa1558bbb0b01f18ec1cd\"},\r\n  {name: \"Israeli Restaurant\", id: \"56aa371be4b08b9a8d573529\"},\r\n  {name: \"Pakistani Restaurant\", id: \"52e81612bcbc57f1066b79f8\"},\r\n  {name: \"Polish Restaurant\", id: \"52e81612bcbc57f1066b7a04\"},\r\n  {name: \"Portuguese Restaurant\", id: \"4def73e84765ae376e57713a\"},\r\n  {name: \"Russian Restaurant\", id: \"5293a7563cf9994f4e043a44\"},\r\n  {name: \"Scandinavian Restaurant\", id: \"4bf58dd8d48988d1c6941735\"},\r\n  {name: \"Spanish Restaurant\", id: \"4bf58dd8d48988d150941735\"},\r\n  {name: \"Turkish Restaurant\", id: \"4f04af1f2fb6e1c99f3db0bb\"},\r\n].sort(function(a,b) {\r\n  return a.name.localeCompare(b.name);\r\n})\r\n\r\n\r\nexport default categoryList;\r\n","import styled from 'styled-components';\r\n\r\nconst Input = styled.input`\r\n\tborder: 1px solid ${({ theme }) => theme.amber500};\r\n\tcolor: ${({ theme }) => theme.backgroundColor};\r\n\tcursor: text;\r\n\tbackground-color: ${({ theme }) => theme.amber500};\r\n\tpadding: 3px 3px 3px 30px;\r\n\twidth: 200px;\r\n\theight: 40px;\r\n\tfont-size: ${({ theme }) => theme.fontL};\r\n\tborder-radius: 20px;\r\n\toutline-color:  ${({ theme }) => theme.backgroundColor};\r\n\t&:focus,\r\n\t:valid {\r\n\t\tborder: 1px solid ${({ theme }) => theme.amber500};\r\n\t}\r\n\t&:focus ~ label,\r\n\t:valid ~ label {\r\n\t\ttop: -20px;\r\n\t\tleft: 30px;\r\n\t\tfont-size: ${({ theme }) => theme.fontS};\r\n\t\tcolor: ${({ theme }) => theme.amber500};\r\n\t\r\n\t}\r\n`;\r\n\r\nexport { Input };\r\n","import styled from 'styled-components';\r\n\r\nconst AnimatedLabel = styled.label`\r\nposition: absolute;\r\ntop: 10px;\r\nleft: 50px;\r\ncolor:  ${({ theme }) => theme.ghostWhite};\r\nfont-size: ${({ theme }) => theme.fontL};\r\npointer-events: none;\r\ntransition: 0.3s ease all;\r\nz-index: 100;\r\n`;\r\n\r\nexport { AnimatedLabel }","import styled from 'styled-components';\r\n\r\nconst SubmitButton = styled.button`\r\n  cursor: pointer;\r\n  border: 2px solid ${({ theme }) => theme.amber500};\r\n  border-radius: 50%;\r\n  height: 80px;\r\n  width: 80px; \r\n  font-size: ${({ theme }) => theme.fontL};\r\n  color: ${({ theme }) => theme.amber500};\r\n  background-color: ${({ theme }) => theme.backgroundColor};\r\n  outline-color: ${({ theme }) => theme.backgroundColor}; \r\n  transition: 0.5s all ease-out;\r\n  &:hover {\r\n    color: ${({ theme }) => theme.backgroundColor};\r\n    background-color: ${({ theme }) => theme.amber500};\r\n  }\r\n`\r\nexport { SubmitButton }\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport SelectCategories from './SelectCategories';\r\nimport categoryList from './CategoryList';\r\nimport { Input } from './Input';\r\nimport { AnimatedLabel } from './Label';\r\nimport { SubmitButton } from './Button';\r\n\r\nconst Form = (props) => {\r\n\treturn (\r\n\t\t<FormWrapper onSubmit={props.submit}>\r\n\t\t\t<Input\r\n\t\t\t\trequired\r\n\t\t\t\ttype='text'\r\n\t\t\t\tid='searchInput'\r\n\t\t\t\tname='city'\r\n\t\t\t/>\r\n\t\t\t<AnimatedLabel htmlFor='searchInput'>City name</AnimatedLabel>\r\n\t\t\t<SelectCategories\r\n\t\t\t\tcategories={categoryList}\r\n\t\t\t\tname='category'\r\n\t\t\t></SelectCategories>\r\n\t\t\t<SubmitButton type='submit'>Find it!</SubmitButton>\r\n\t\t</FormWrapper>\r\n\t);\r\n};\r\n\r\nconst FormWrapper = styled.form`\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\theight: 40px;\r\n\twidth: 650px;\r\n\tz-index: 10;\r\n`;\r\nexport default Form;\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport uuid from 'uuid';\r\n\r\nconst RestaurantCard = (props) => {\r\n\treturn (\r\n\t\t<Wrapper id='cardWrapper'>\r\n\t\t\t{props.restaurantData.map((el, index) => (\r\n\t\t\t\t<CardWrapper\r\n\t\t\t\t\tonClick={props.onSelectRestaurant}\r\n\t\t\t\t\tname={el.name}\r\n\t\t\t\t\tindex={index}\r\n\t\t\t\t\tclassName={'test'}\r\n\t\t\t\t\tkey={uuid.v4()}\r\n\t\t\t\t>\r\n\t\t\t\t\t<RestaurantCardText name={el.name} key={uuid.v4()}>\r\n\t\t\t\t\t\t{el.name.toUpperCase()}\r\n\t\t\t\t\t</RestaurantCardText>\r\n\t\t\t\t\t<RestaurantCardText key={uuid.v4()}>\r\n\t\t\t\t\t\t{el.address.street}\r\n\t\t\t\t\t</RestaurantCardText>\r\n\t\t\t\t</CardWrapper>\r\n\t\t\t))}\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\theight: 500px;\r\n\twidth: 600px;\r\n\toverflow-x: auto;\r\n\tmargin-top: 20px;\r\n\tz-index: 12;\r\n`;\r\nconst unhiddenAnimation = keyframes`\r\nfrom {opacity: 0}\r\nto {opacity:100%}\r\n`;\r\nconst CardWrapper = styled.div`\r\n\topacity: 0;\r\n\tborder-radius: 20px;\r\n\tborder: 1px solid #ffc107;\r\n\tmargin: 5px 0;\r\n\tbackground-color: ${({ theme }) => theme.backgroundColor};\r\n\tcolor: grey;\r\n\twidth: 92%;\r\n\theight: 70px;\r\n\ttext-align: center;\r\n\tanimation: ${unhiddenAnimation} 0.5s ease-in-out\r\n\t\t${(props) => props.index * 0.2}s forwards;\r\n\t&:hover {\r\n\t\tbackground-color: #ffc107;\r\n\t\tcolor: ${({ theme }) => theme.backgroundColor};\r\n\t}\r\n`;\r\nconst RestaurantCardText = styled.p`\r\n\tfont-size: ${(props) => (props.name ? 'fontM' : 'fontS')};\r\n\tfont-weight: ${(props) => (props.name ? '600' : '')};\r\n\tline-height: 8px;;\r\n`;\r\nexport default RestaurantCard;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Title = styled.p`\r\nfont-family: 'Ibarra Real Nova', serif;\r\nfont-size: ${({ theme }) => theme.fontXl};\r\ntext-align: left;\r\nz-index: 11;\r\n`;\r\n\r\nexport { Title };\r\n","import React from 'react';\r\nimport L from 'leaflet';\r\nimport icon from '../img/map-pointer.svg';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport styled from 'styled-components';\r\n\r\nexport default class Map extends React.Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.map = L.map('map', {\r\n\t\t\tcenter: this.props.cityCenterPosition,\r\n\t\t\tzoom: 12,\r\n\t\t\tzoomControl: false,\r\n\t\t});\r\n\t\tL.tileLayer(\r\n\t\t\t'https://api.mapbox.com/styles/v1/unpolaco/ck5d0k8m403ju1iqo74h3bii4/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoidW5wb2xhY28iLCJhIjoiY2swNW9qc3ZtMzB1cTNtcGswdnZkdW82cSJ9.3O4zCHkCvu4zhkQ_dZ1Vvg',\r\n\t\t\t{\r\n\t\t\t\tdetectRetina: true,\r\n\t\t\t\tmaxZoom: 20,\r\n\t\t\t\tmaxNativeZoom: 17,\r\n\t\t\t}\r\n\t\t).addTo(this.map);\r\n\t\tthis.layer = L.layerGroup().addTo(this.map);\r\n\r\n\t\tlet DefaultIcon = L.icon({\r\n\t\t\ticonUrl: icon,\r\n\t\t\ticonSize: [27, 36],\r\n\t\t});\r\n\t\tL.Marker.prototype.options.icon = DefaultIcon;\r\n\t}\r\n\r\n\tcomponentDidUpdate({ restaurantData, selectedRestaurant }) {\r\n\t\tif (this.props.restaurantData !== restaurantData) {\r\n\t\t\tthis.updateMarkers(this.props.restaurantData);\r\n\t\t}\r\n\t\tthis.map.flyTo(this.props.cityCenterPosition, 12);\r\n\t}\r\n\tupdateMarkers(restaurantData) {\r\n\t\tthis.layer.clearLayers();\r\n\t\t// console.log(this.name);\r\n\t\trestaurantData.forEach((marker) => {\r\n\t\t\tL.marker(marker.latLng, { title: marker.name })\r\n\t\t\t\t.addTo(this.layer)\r\n\t\t\t\t.bindPopup(marker.name);\r\n\t\t});\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<MapWrapper\r\n\t\t\t\tid='map'\r\n\t\t\t\tcityCenterPosition={this.props.cityCenterPosition}\r\n\t\t\t\tonClick={this.props.onSelectMarker}\r\n\t\t\t></MapWrapper>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst MapWrapper = styled.div`\r\n\tposition: fixed;\r\n\tfloat: right;\r\n\twidth: 700px;\r\n\theight: 700px;\r\n\tbottom: -100px;\r\n\tright: -100px;\r\n\toverflow: hidden;\r\n\tborder-radius: 350px;\r\n\tz-index: 0;\r\n`;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n* , *::before, *::after {\r\n    box-sizing: border-box;\r\n}\r\n  html {\r\n    font-size: 62.5%;\r\n  }\r\n  body {    \r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: 'Nunito', sans-serif;\r\n    font-size: 1.6rem;\r\n    text-align: center;\r\n\t\tflex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n`;\r\nexport default GlobalStyle;\r\n","export const theme = {\r\n  backgroundColor: \"#fff\",\r\n  ghostWhite: \"#f6fafd\",\r\n  gray80: \"#ccc\",\r\n  blueGrey200: \"#B0BEC5\",\r\n  blueGrey800: \"#37474F\",\r\n  blueGrey900: \"#263238\",\r\n\r\n  amber500: \"#FFC107\",\r\n  amber600: \"#FFB300\",\r\n  amber800: \"#FF8F00\",\r\n\r\n  fontS: \"1.2rem\",\r\n  fontM: \"1.5rem\",\r\n  fontL: \"1.7rem\",\r\n  fontXl: \"4rem\",\r\n}","import React, { Component } from 'react';\r\nimport styled, { ThemeProvider } from 'styled-components';\r\nimport Form from './components/Form';\r\nimport RestaurantCard from './components/RestaurantCard';\r\nimport { Title } from './components/Title';\r\nimport Map from './components/Map';\r\nimport categoryList from './components/CategoryList';\r\nimport GlobalStyle from './styles/GlobalStyle';\r\nimport { theme } from './styles/mainTheme';\r\n\r\nclass App extends Component {\r\n\tstate = {\r\n\t\tinputValue: '',\r\n\t\trestaurants: [],\r\n\t\tselectedCategoryId: '',\r\n\t\tcityCenterPosition: [52.22977, 21.01178],\r\n\t\tselectedRestaurant: '',\r\n\t};\r\n\r\n\tloadData(id, city = 'Warsaw') {\r\n\t\tconst fourSquareUrl = 'https://api.foursquare.com/v2/venues/search?';\r\n\t\tconst parameters = {\r\n\t\t\tclient_id: 'IEV0NGQ2WLUULDQ1TA0OD1UPUKZG0VTO3MYIKDN2MYHIKJ1E',\r\n\t\t\tclient_secret: 'SVPZ5HDAZK0JUFDNNVQBAWODV0FNG25YGM1EL5MB4SCSKRWD',\r\n\t\t\tnear: city,\r\n\t\t\tcategoryId: id,\r\n\t\t\tlimit: 100,\r\n\t\t\tv: 20200403,\r\n\t\t};\r\n\t\tfetch(fourSquareUrl + new URLSearchParams(parameters))\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (res.response.venues) {\r\n\t\t\t\t\tthis.setState((prevState) => ({\r\n\t\t\t\t\t\tcityCenterPosition: [\r\n\t\t\t\t\t\t\tres.response.geocode.feature.geometry.center.lat,\r\n\t\t\t\t\t\t\tres.response.geocode.feature.geometry.center.lng,\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\trestaurants: res.response.venues.map((el) => ({\r\n\t\t\t\t\t\t\tname: el.name,\r\n\t\t\t\t\t\t\taddress: {\r\n\t\t\t\t\t\t\t\tstreet: el.location.formattedAddress[0],\r\n\t\t\t\t\t\t\t\tcity: el.location.formattedAddress[1],\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tlat: el.location.lat,\r\n\t\t\t\t\t\t\tlng: el.location.lng,\r\n\t\t\t\t\t\t\tlatLng: {\r\n\t\t\t\t\t\t\t\tlat: el.location.lat,\r\n\t\t\t\t\t\t\t\tlng: el.location.lng,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tcategory:\r\n\t\t\t\t\t\t\t\tel === true\r\n\t\t\t\t\t\t\t\t\t? el.categories[0].name\r\n\t\t\t\t\t\t\t\t\t: '4bf58dd8d48988d110941735',\r\n\t\t\t\t\t\t})),\r\n\t\t\t\t\t}));\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert('Write a correct city name');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n\r\n\tfindCategoryId = (e) => {\r\n\t\tconst categoryId = categoryList\r\n\t\t\t.filter((el) => el.name === e.target[1].value)\r\n\t\t\t.map((el) => el.id);\r\n\t\treturn categoryId;\r\n\t};\r\n\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst inputCityName = e.target[0].value;\r\n\t\tconst categoryId = this.findCategoryId(e);\r\n\t\tthis.loadData(categoryId, inputCityName);\r\n\t};\r\n\r\n\thandleSelectRestaurant = (e) => {\r\n\t\tconsole.log(e.currentTarget.getAttribute('name'));\r\n\r\n\t\t// this.setState({\r\n\t\t//   selectedRestaurant: e.currentTarget.name,\r\n\t\t// })\r\n\t};\r\n\r\n\t// handleSelectMarker = (e) => {\r\n\t//   console.log(e.target.title);\r\n\t//   // this.setState({\r\n\t//   //   selectedRestaurant: e.target.options.title,\r\n\t//   // })\r\n\t// }\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<GlobalStyle />\r\n\t\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t\t<MainWrapper>\r\n\t\t\t\t\t\t<Title>\r\n\t\t\t\t\t\t\tWhere do you want to go tonight in{' '}\r\n\t\t\t\t\t\t\t{this.state.inputValue ? this.state.inputValue : 'Warsaw'} ?\r\n\t\t\t\t\t\t</Title>\r\n\t\t\t\t\t\t<Menu>\r\n\t\t\t\t\t\t\t<Form\r\n\t\t\t\t\t\t\t\tsubmit={this.handleSubmit}\r\n\t\t\t\t\t\t\t></Form>\r\n\t\t\t\t\t\t\t<RestaurantCard\r\n\t\t\t\t\t\t\t\trestaurantData={this.state.restaurants}\r\n\t\t\t\t\t\t\t\tonSelectRestaurant={this.handleSelectRestaurant}\r\n\t\t\t\t\t\t\t></RestaurantCard>\r\n\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t\t<Map\r\n\t\t\t\t\t\t\tcityCenterPosition={this.state.cityCenterPosition}\r\n\t\t\t\t\t\t\trestaurantData={this.state.restaurants}\r\n\t\t\t\t\t\t\tonSelectMarker={this.handleSelectMarker}\r\n\t\t\t\t\t\t\tselectedRestaurant={this.state.selectedRestaurant}\r\n\t\t\t\t\t\t></Map>\r\n\t\t\t\t\t</MainWrapper>\r\n\t\t\t\t</ThemeProvider>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nconst Menu = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: flex-start;\r\n\talign-content: left;\r\n\theight: 70%;\r\n\twidth: 60%;\r\n`;\r\nconst MainWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tflex-direction: column;\r\n\talign-content: center;\r\n\tmin-width: 850px;\r\n\tmargin-left: 20px;\r\n`;\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}